"""dsda

Revision ID: 3769297142d0
Revises: fb1f416ba393
Create Date: 2025-08-14 18:37:43.086314

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "3769297142d0"
down_revision: Union[str, Sequence[str], None] = "fb1f416ba393"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "product_translations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("slug", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("language_code_id", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["language_code_id"],
            ["language_codes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("slug"),
    )
    op.drop_table("product_description_translations")
    op.drop_table("product_name_slug_translations")
    op.add_column(
        "product_variant_translations", sa.Column("slug", sa.String(), nullable=True)
    )
    op.add_column(
        "product_variant_translations",
        sa.Column("description", sa.String(), nullable=True),
    )
    op.alter_column(
        "product_variant_translations",
        "name",
        existing_type=sa.VARCHAR(),
        nullable=True,
    )
    op.create_unique_constraint(None, "product_variant_translations", ["slug"])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "product_variant_translations", type_="unique")
    op.alter_column(
        "product_variant_translations",
        "name",
        existing_type=sa.VARCHAR(),
        nullable=False,
    )
    op.drop_column("product_variant_translations", "description")
    op.drop_column("product_variant_translations", "slug")
    op.create_table(
        "product_name_slug_translations",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("slug", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "language_code_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("product_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "product_variant_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["language_code_id"],
            ["language_codes.id"],
            name=op.f("product_name_slug_translations_language_code_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
            name=op.f("product_name_slug_translations_product_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["product_variant_id"],
            ["product_variants.id"],
            name=op.f("product_name_slug_translations_product_variant_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("product_name_slug_translations_pkey")),
        sa.UniqueConstraint(
            "slug",
            name=op.f("product_name_slug_translations_slug_key"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.create_table(
        "product_description_translations",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "language_code_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("product_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "product_variant_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["language_code_id"],
            ["language_codes.id"],
            name=op.f("product_description_translations_language_code_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
            name=op.f("product_description_translations_product_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["product_variant_id"],
            ["product_variants.id"],
            name=op.f("product_description_translations_product_variant_id_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "id", name=op.f("product_description_translations_pkey")
        ),
    )
    op.drop_table("product_translations")
    # ### end Alembic commands ###
