"""dsda

Revision ID: 9dd85959dc34
Revises: 94af0035f227
Create Date: 2025-08-19 03:15:18.980992

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "9dd85959dc34"
down_revision: Union[str, Sequence[str], None] = "94af0035f227"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("product_variant_specifications")
    op.drop_constraint(
        op.f("product_variants_name_en_key"), "product_variants", type_="unique"
    )
    op.drop_constraint(
        op.f("product_variants_name_ro_key"), "product_variants", type_="unique"
    )
    op.drop_constraint(
        op.f("product_variants_slug_en_key"), "product_variants", type_="unique"
    )
    op.drop_constraint(
        op.f("product_variants_slug_ro_key"), "product_variants", type_="unique"
    )
    op.drop_column("product_variants", "slug_ro")
    op.drop_column("product_variants", "description_en")
    op.drop_column("product_variants", "image")
    op.drop_column("product_variants", "slug_en")
    op.drop_column("product_variants", "name_en")
    op.drop_column("product_variants", "description_ro")
    op.drop_column("product_variants", "name_ro")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "product_variants",
        sa.Column("name_ro", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "product_variants",
        sa.Column("description_ro", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "product_variants",
        sa.Column("name_en", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "product_variants",
        sa.Column("slug_en", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "product_variants",
        sa.Column("image", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "product_variants",
        sa.Column("description_en", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "product_variants",
        sa.Column("slug_ro", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.create_unique_constraint(
        op.f("product_variants_slug_ro_key"),
        "product_variants",
        ["slug_ro"],
        postgresql_nulls_not_distinct=False,
    )
    op.create_unique_constraint(
        op.f("product_variants_slug_en_key"),
        "product_variants",
        ["slug_en"],
        postgresql_nulls_not_distinct=False,
    )
    op.create_unique_constraint(
        op.f("product_variants_name_ro_key"),
        "product_variants",
        ["name_ro"],
        postgresql_nulls_not_distinct=False,
    )
    op.create_unique_constraint(
        op.f("product_variants_name_en_key"),
        "product_variants",
        ["name_en"],
        postgresql_nulls_not_distinct=False,
    )
    op.create_table(
        "product_variant_specifications",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "product_variant_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "specification_type_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("name_en", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("name_ro", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["product_variant_id"],
            ["product_variants.id"],
            name=op.f("product_variant_specifications_product_variant_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["specification_type_id"],
            ["product_specification_types.id"],
            name=op.f("product_variant_specifications_specification_type_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("product_variant_specifications_pkey")),
    )
    # ### end Alembic commands ###
