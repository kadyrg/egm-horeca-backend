"""dsda

Revision ID: 6a0ba11f3381
Revises: 247e92b810b1
Create Date: 2025-08-17 17:10:00.159840

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "6a0ba11f3381"
down_revision: Union[str, Sequence[str], None] = "247e92b810b1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("product_variant_type_translations")
    op.drop_table("product_translations")
    op.drop_table("product_variant_specific_translations")
    op.drop_table("product_variant_translations")
    op.drop_table("product_specification_type_translations")
    op.drop_table("product_specific_translations")
    op.drop_table("category_translations")
    op.add_column("categories", sa.Column("name_en", sa.String(), nullable=False))
    op.add_column("categories", sa.Column("name_ro", sa.String(), nullable=False))
    op.add_column("categories", sa.Column("slug_en", sa.String(), nullable=False))
    op.add_column("categories", sa.Column("slug_ro", sa.String(), nullable=False))
    op.create_unique_constraint(None, "categories", ["slug_en"])
    op.create_unique_constraint(None, "categories", ["name_en"])
    op.create_unique_constraint(None, "categories", ["name_ro"])
    op.create_unique_constraint(None, "categories", ["slug_ro"])
    op.add_column(
        "product_specification_types", sa.Column("name_en", sa.String(), nullable=False)
    )
    op.add_column(
        "product_specification_types", sa.Column("name_ro", sa.String(), nullable=False)
    )
    op.create_unique_constraint(None, "product_specification_types", ["name_en"])
    op.create_unique_constraint(None, "product_specification_types", ["name_ro"])
    op.add_column(
        "product_specifications", sa.Column("name_en", sa.String(), nullable=False)
    )
    op.add_column(
        "product_specifications", sa.Column("name_ro", sa.String(), nullable=False)
    )
    op.add_column(
        "product_variant_specifications",
        sa.Column("name_en", sa.String(), nullable=False),
    )
    op.add_column(
        "product_variant_specifications",
        sa.Column("name_ro", sa.String(), nullable=False),
    )
    op.add_column(
        "product_variant_types", sa.Column("name_en", sa.String(), nullable=False)
    )
    op.add_column(
        "product_variant_types", sa.Column("name_ro", sa.String(), nullable=False)
    )
    op.create_unique_constraint(None, "product_variant_types", ["name_en"])
    op.create_unique_constraint(None, "product_variant_types", ["name_ro"])
    op.add_column("product_variants", sa.Column("name_en", sa.String(), nullable=False))
    op.add_column("product_variants", sa.Column("name_ro", sa.String(), nullable=False))
    op.add_column(
        "product_variants", sa.Column("description_en", sa.String(), nullable=False)
    )
    op.add_column(
        "product_variants", sa.Column("description_ro", sa.String(), nullable=False)
    )
    op.add_column("product_variants", sa.Column("slug_en", sa.String(), nullable=False))
    op.add_column("product_variants", sa.Column("slug_ro", sa.String(), nullable=False))
    op.create_unique_constraint(None, "product_variants", ["slug_ro"])
    op.create_unique_constraint(None, "product_variants", ["name_en"])
    op.create_unique_constraint(None, "product_variants", ["name_ro"])
    op.create_unique_constraint(None, "product_variants", ["slug_en"])
    op.add_column("products", sa.Column("name_en", sa.String(), nullable=False))
    op.add_column("products", sa.Column("name_ro", sa.String(), nullable=False))
    op.add_column("products", sa.Column("description_en", sa.String(), nullable=False))
    op.add_column("products", sa.Column("description_ro", sa.String(), nullable=False))
    op.add_column("products", sa.Column("slug_en", sa.String(), nullable=False))
    op.add_column("products", sa.Column("slug_ro", sa.String(), nullable=False))
    op.create_unique_constraint(None, "products", ["name_en"])
    op.create_unique_constraint(None, "products", ["slug_ro"])
    op.create_unique_constraint(None, "products", ["name_ro"])
    op.create_unique_constraint(None, "products", ["slug_en"])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "products", type_="unique")
    op.drop_constraint(None, "products", type_="unique")
    op.drop_constraint(None, "products", type_="unique")
    op.drop_constraint(None, "products", type_="unique")
    op.drop_column("products", "slug_ro")
    op.drop_column("products", "slug_en")
    op.drop_column("products", "description_ro")
    op.drop_column("products", "description_en")
    op.drop_column("products", "name_ro")
    op.drop_column("products", "name_en")
    op.drop_constraint(None, "product_variants", type_="unique")
    op.drop_constraint(None, "product_variants", type_="unique")
    op.drop_constraint(None, "product_variants", type_="unique")
    op.drop_constraint(None, "product_variants", type_="unique")
    op.drop_column("product_variants", "slug_ro")
    op.drop_column("product_variants", "slug_en")
    op.drop_column("product_variants", "description_ro")
    op.drop_column("product_variants", "description_en")
    op.drop_column("product_variants", "name_ro")
    op.drop_column("product_variants", "name_en")
    op.drop_constraint(None, "product_variant_types", type_="unique")
    op.drop_constraint(None, "product_variant_types", type_="unique")
    op.drop_column("product_variant_types", "name_ro")
    op.drop_column("product_variant_types", "name_en")
    op.drop_column("product_variant_specifications", "name_ro")
    op.drop_column("product_variant_specifications", "name_en")
    op.drop_column("product_specifications", "name_ro")
    op.drop_column("product_specifications", "name_en")
    op.drop_constraint(None, "product_specification_types", type_="unique")
    op.drop_constraint(None, "product_specification_types", type_="unique")
    op.drop_column("product_specification_types", "name_ro")
    op.drop_column("product_specification_types", "name_en")
    op.drop_constraint(None, "categories", type_="unique")
    op.drop_constraint(None, "categories", type_="unique")
    op.drop_constraint(None, "categories", type_="unique")
    op.drop_constraint(None, "categories", type_="unique")
    op.drop_column("categories", "slug_ro")
    op.drop_column("categories", "slug_en")
    op.drop_column("categories", "name_ro")
    op.drop_column("categories", "name_en")
    op.create_table(
        "category_translations",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("slug", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "language_code_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("category_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.id"],
            name=op.f("category_translations_category_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["language_code_id"],
            ["language_codes.id"],
            name=op.f("category_translations_language_code_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("category_translations_pkey")),
        sa.UniqueConstraint(
            "slug",
            name=op.f("category_translations_slug_key"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.create_table(
        "product_specific_translations",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "product_specification_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "language_code_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["language_code_id"],
            ["language_codes.id"],
            name=op.f("product_specific_translations_language_code_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["product_specification_id"],
            ["product_specifications.id"],
            name=op.f("product_specific_translations_product_specification_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("product_specific_translations_pkey")),
    )
    op.create_table(
        "product_specification_type_translations",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "product_specification_type_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "language_code_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["language_code_id"],
            ["language_codes.id"],
            name=op.f("product_specification_type_translations_language_code_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["product_specification_type_id"],
            ["product_specification_types.id"],
            name=op.f(
                "product_specification_type_tr_product_specification_type_i_fkey"
            ),
        ),
        sa.PrimaryKeyConstraint(
            "id", name=op.f("product_specification_type_translations_pkey")
        ),
    )
    op.create_table(
        "product_variant_translations",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "product_variant_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "language_code_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("slug", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["language_code_id"],
            ["language_codes.id"],
            name=op.f("product_variant_translations_language_code_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["product_variant_id"],
            ["product_variants.id"],
            name=op.f("product_variant_translations_product_variant_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("product_variant_translations_pkey")),
        sa.UniqueConstraint(
            "slug",
            name=op.f("product_variant_translations_slug_key"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.create_table(
        "product_variant_specific_translations",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "product_variant_specification_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "language_code_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["language_code_id"],
            ["language_codes.id"],
            name=op.f("product_variant_specific_translations_language_code_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["product_variant_specification_id"],
            ["product_variant_specifications.id"],
            name=op.f(
                "product_variant_specific_tran_product_variant_specificatio_fkey"
            ),
        ),
        sa.PrimaryKeyConstraint(
            "id", name=op.f("product_variant_specific_translations_pkey")
        ),
    )
    op.create_table(
        "product_translations",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("slug", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "language_code_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("product_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["language_code_id"],
            ["language_codes.id"],
            name=op.f("product_translations_language_code_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
            name=op.f("product_translations_product_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("product_translations_pkey")),
        sa.UniqueConstraint(
            "slug",
            name=op.f("product_translations_slug_key"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.create_table(
        "product_variant_type_translations",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "product_variant_type_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "language_code_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["language_code_id"],
            ["language_codes.id"],
            name=op.f("product_variant_type_translations_language_code_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["product_variant_type_id"],
            ["product_variant_types.id"],
            name=op.f("product_variant_type_translations_product_variant_type_id_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "id", name=op.f("product_variant_type_translations_pkey")
        ),
    )
    # ### end Alembic commands ###
